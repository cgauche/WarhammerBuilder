{% extends 'base.html.twig' %}

{% block title %}Edition des rangs{% endblock %}

{% block body %}
<style>
    .option {
        width: auto !important;
        height: auto !important;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems, { dismissible: false });
    });

    window.onload = loadTable;
    function loadTable() {
        var url = '{{ path("readCareersRanks") }}'
        $.ajax({
            url : url,
            data : { id : document.getElementById('idCareers').innerHTML },
            type : "POST",
            dataType : "html",
            success : function(data, status){
                $("#table").html(data);
                M.Dropdown.init(document.querySelectorAll('.dropdown-trigger'));
            },
            error : function(error, status, errorThrow){
                console.log(status + "\n" + errorThrow)
            }
        })
    }

    function openForm(id = '') {
        var url = '{{ path("readRanks") }}'
        $.ajax({
            url : url,
            data : {
                id : id
            },
            type : "POST",
            dataType : "html",
            success : function(data, status){
                $("#formRanks").html(data);
                M.FormSelect.init(document.querySelectorAll('select'),{dropdownOptions:{container:document.body}});
            },
            error : function(error, status, errorThrow){
                console.log(status + "\n" + errorThrow)
            },  
            complete : function (){
                var elem = document.getElementById('modalRanks')
                document.getElementsByClassName('modButton')[0].setAttribute('id',id)
                M.Modal.getInstance(elem).open()
            }
        })
    }

    function saveRanks(id) {
        var name = document.getElementById("ranks_name").value
        var status = document.getElementById("ranks_status").value
        var idCharac = document.getElementById("ranks_idCharac").value
        var idCharac2 = document.getElementById("ranks_idCharac2").value
        var idCharac3 = document.getElementById("ranks_idCharac3").value
        var idSource = document.getElementById("ranks_idSource").value
        
        if(name == '') {
            M.toast({html : 'Veuillez saisir un nom pour le rang.', classes : 'red lighten-1'})
        }else if(status == ''){
            M.toast({html : 'Veuillez sélectionner un status pour le rang.', classes : 'red lighten-1'})
        }else if(idCharac == ''){
            M.toast({html : 'Veuillez sélectionner une caractéristique principale pour le rang.', classes : 'red lighten-1'})
        }else{
            if( id != ''){
                var url = '{{ path("updateRanks") }}'
                $.ajax({
                    url : url,
                    data : {
                        id : id,
                        idCharac : idCharac,
                        idCharac2 : idCharac2,
                        idCharac3 : idCharac3,
                        name : name,
                        status : status,
                        idSource : idSource
                    },
                    type : "POST",
                    dataType : "json",
                    success : function(data, status){
                        M.toast({html : 'Rang modifié avec succès !'})
                        M.Modal.getInstance(document.getElementById('modalRanks')).close()
                        loadTable();
                    },
                    error : function(error, status, errorThrow){
                        console.log(status + "\n" + errorThrow)
                    }
                })
            }else{
                var url = '{{ path("createRanks") }}'
                $.ajax({
                    url : url,
                    data : {
                        id : document.getElementById('idCareers').innerHTML,
                        idCharac : idCharac,
                        idCharac2 : idCharac2,
                        idCharac3 : idCharac3,
                        name : name,
                        status : status,
                        idSource : idSource
                    },
                    type : "POST",
                    dataType : "json",
                    success : function(data, status){
                        M.toast({html : 'Rang créé avec succès !'})
                        M.Modal.getInstance(document.getElementById('modalRanks')).close()
                        loadTable();
                    },
                    error : function(error, status, errorThrow){
                        console.log(status + "\n" + errorThrow)
                    }
                })
            }
        }
        
    }

    function delRanks(id) {
        var url = '{{ path("deleteRanks") }}'
        $.ajax({
            url : url,
            data : {
                id : id
            },
            type : "POST",
            dataType : "json",
            success : function(data, status){
                M.toast({html : 'Rang supprimé avec succès !'})
                loadTable();
            },
            error : function(error, status, errorThrow){
                console.log(status + "\n" + errorThrow)
            }
        })
    }

    function delMsg(id) {
        var elem = $('#delRanks')
        document.getElementsByClassName('delButton')[0].setAttribute('id',id)
        M.Modal.getInstance(elem).open()
    }

    /*************************************************************
    * GESTION DES COMPETENCES POSSIBLES (SkillsRank)
    *************************************************************/    
    function openSkills(id){
        var url = '{{ path("readSkillsRanks") }}'
        $.ajax({
            url: url,
            data: {
                id: id
            },
            type: "POST",
            dataType: "html",
            success: function (data, status) {
                $("#tableSkills").html(data);
                M.FormSelect.init(document.querySelectorAll('select'),{dropdownOptions:{container:document.body}});
            },
            error: function (error, status, errorThrow) {
                console.log(status + "\n" + errorThrow)
            },
            complete: function () {
                var elem = document.getElementById('modalSkills')
                document.getElementsByClassName('modButtonSkills')[0].setAttribute('id', id)
                M.Modal.getInstance(elem).open()
            }
        })
    }

    function createSkillsLine(){
        var row = document.getElementById('tableSkills').insertRow(-1)
        var cellID = row.insertCell(-1)
        cellID.setAttribute('class','unvisible')
        cellID.innerHTML = '-1'

        var cellSkills = row.insertCell(-1)
        var labelS = document.createElement('label')
        labelS.innerHTML = 'Compétence'
        var talentList = document.createElement('select')
        talentList.setAttribute('name',"skill")
        talentList.setAttribute('class',"width250")
        talentList.setAttribute("onchange","haveSpecs(this)")
        var opt = document.createElement('option')
        opt.innerHTML = 'Sélectionner une compétence ...'
        opt.setAttribute('value','')
        talentList.append(opt)
        var url = '{{ path("getAllSkills") }}'
        $.ajax({
            url: url,
            type: "POST",
            dataType: "JSON",
            success: function (data, status) {
                for(var i = 0; i < Object.keys(data).length; i++){
                    opt = document.createElement('option')
                    opt.innerHTML = data[i].name
                    opt.setAttribute('value',data[i].id)
                    talentList.append(opt)
                }

                cellSkills.append(labelS)
                cellSkills.append(talentList)
                
                var cellSpec = row.insertCell(-1)
                cellSpec.setAttribute('class', 'unvisible')
                var labelSpec = document.createElement('label')
                labelSpec.innerHTML = 'Specs'
                var inputSpec = document.createElement('input')
                cellSpec.append(labelSpec)
                cellSpec.append(inputSpec)

                var cellButton = row.insertCell(-1)
                var buttonDel = document.createElement('a')
                buttonDel.setAttribute('class', 'waves-effect waves-light btn modal-trigger')
                buttonDel.setAttribute('onclick','delSkillsLine(this)')
                var icon = document.createElement('i')
                icon.innerHTML = 'delete'
                icon.setAttribute('class','material-icons')
                buttonDel.append(icon)
                cellButton.append(buttonDel)

                M.FormSelect.init(talentList,{dropdownOptions:{container:document.body}});
            },
        })
    }

    function haveSpecs(select){
        var cell = select.parentElement.parentElement.parentElement.children[2]
        var url = '{{ path("haveSpecs") }}'
        $.ajax({
            url: url,
            data: {
                id: select.value
            },
            type: "POST",
            dataType: "json",
            success: function (data, status) {
                if (data['result'] != null) {
                    cell.setAttribute("class",'width250') 
                    cell.children[1].setAttribute("class",'autocomplete') 
                    M.Autocomplete.init(cell.children[1], {
                        data : data['result'].split(",").map(item => item.trim()).reduce((value,key)=> (value[key]=null,value),{})
                    });
                } else {
                    cell.setAttribute("class", "unvisible width250")
                    cell.getElementsByTagName('input')[0].value = ''
                }
            },
            error: function (error, status, errorThrow) {
                cell.setAttribute("class", "unvisible width250")
                console.log(status + "\n" + errorThrow)
            }
        })
    }

    function delSkillsLine(button){
        var row = button.parentElement.parentElement
        var id = parseInt(row.children[0].innerHTML)
        if(id > 0 && id != undefined && id != null){
            var url = '{{ path("deleteSkillsRanks") }}'
            $.ajax({
                url : url,
                data : {
                    id : id
                },
                type : 'POST',
                dataType : 'JSON',
                success : function() {
                    row.remove()
                }
            })
        }else{
            row.remove()
        }
    }

    function saveSkills(id){
        var tableRow = document.getElementById("tableSkills").getElementsByTagName('tr')
        var data = {}
        for (var i = 1; i < tableRow.length; i++) {
            data[i] = {}
            data[i]['id'] = tableRow[i].children[0].textContent //IDLine
            data[i]['idS'] = tableRow[i].children[1].children[1].getElementsByTagName("select")[0].value //IDSkills
            data[i]['specs'] = tableRow[i].children[2].children[1].value //specs
        }

        var url = '{{ path("saveSkillsRanks") }}'
        $.ajax({
            url: url,
            data: {
                id: id,
                data: JSON.stringify(data)
            },
            type: "POST",
            dataType: "json",
            success: function (data, status) {
                M.toast({ html: 'Compétences par défaut enregistrés avec succès !' })
                M.Modal.getInstance(document.getElementById('modalSkills')).close()
            },
            error: function (error, status, errorThrow) {
                console.log(status + "\n" + errorThrow)
            }
        })
    }

    /*************************************************************
    * GESTION DES TALENTS POSSIBLES (TalentsRank)
    *************************************************************/   
    function openTalents(id){
        var url = '{{ path("readTalentsRanks") }}'
        $.ajax({
            url: url,
            data: {
                id: id
            },
            type: "POST",
            dataType: "html",
            success: function (data, status) {
                $("#tableTalents").html(data);
                M.FormSelect.init(document.querySelectorAll('select'),{dropdownOptions:{container:document.body}});
            },
            error: function (error, status, errorThrow) {
                console.log(status + "\n" + errorThrow)
            },
            complete: function () {
                var elem = document.getElementById('modalTalents')
                document.getElementsByClassName('modButtonTalents')[0].setAttribute('id', id)
                M.Modal.getInstance(elem).open()
            }
        })
    }

    function createTalentsLine(){
        var row = document.getElementById('tableTalents').insertRow(-1)
        var cellID = row.insertCell(-1)
        cellID.setAttribute('class','unvisible')
        cellID.innerHTML = '-1'

        var cellTalents = row.insertCell(-1)
        var labelS = document.createElement('label')
        labelS.innerHTML = 'Compétence'
        var talentList = document.createElement('select')
        talentList.setAttribute('name',"talent")
        talentList.setAttribute('class',"width250")
        talentList.setAttribute("onchange","talentSpecs(this)")
        var opt = document.createElement('option')
        opt.innerHTML = 'Sélectionner une compétence ...'
        opt.setAttribute('value','')
        talentList.append(opt)
        var url = '{{ path("getAllTalents") }}'
        $.ajax({
            url: url,
            type: "POST",
            dataType: "JSON",
            success: function (data, status) {
                for(var i = 0; i < Object.keys(data).length; i++){
                    opt = document.createElement('option')
                    opt.innerHTML = data[i].name
                    opt.setAttribute('value',data[i].id)
                    talentList.append(opt)
                }

                cellTalents.append(labelS)
                cellTalents.append(talentList)
                
                var cellSpec = row.insertCell(-1)
                cellSpec.setAttribute('class', 'unvisible')
                var labelSpec = document.createElement('label')
                labelSpec.innerHTML = 'Specs'
                var inputSpec = document.createElement('input')
                cellSpec.append(labelSpec)
                cellSpec.append(inputSpec)

                var cellButton = row.insertCell(-1)
                var buttonDel = document.createElement('a')
                buttonDel.setAttribute('class', 'waves-effect waves-light btn modal-trigger')
                buttonDel.setAttribute('onclick','delTalentsLine(this)')
                var icon = document.createElement('i')
                icon.innerHTML = 'delete'
                icon.setAttribute('class','material-icons')
                buttonDel.append(icon)
                cellButton.append(buttonDel)

                M.FormSelect.init(document.querySelectorAll('select'),{dropdownOptions:{container:document.body}});
            },
        })
    }

    function talentSpecs(select){
        var cell = select.parentElement.parentElement.nextElementSibling
        var url = '{{ path("talentSpecs") }}'
        $.ajax({
            url: url,
            data: {
                id: select.value
            },
            type: "POST",
            dataType: "json",
            success: function (data, status) {
                if (data['result'] != null) {
                    cell.setAttribute("class",'width250') 
                    cell.children[1].setAttribute("class",'autocomplete') 
                    M.Autocomplete.init(cell.children[1], {
                        data : data['result'].split(",").map(item => item.trim()).reduce((value,key)=> (value[key]=null,value),{})
                    });
                } else {
                    cell.setAttribute("class", "unvisible width250")
                    cell.getElementsByTagName('input')[0].value = ''
                }
            },
            error: function (error, status, errorThrow) {
                cell.setAttribute("class", "unvisible width250")
                console.log(status + "\n" + errorThrow)
            }
        })
    }

    function delTalentsLine(button){
        var row = button.parentElement.parentElement
        var id = parseInt(row.children[0].innerHTML)
        if(id > 0 && id != undefined && id != null){
            var url = '{{ path("deleteTalentsRanks") }}'
            $.ajax({
                url : url,
                data : {
                    id : id
                },
                type : 'POST',
                dataType : 'JSON',
                success : function() {
                    row.remove()
                }
            })
        }else{
            row.remove()
        }
    }

    function saveTalents(id){
        var tableRow = document.getElementById("tableTalents").getElementsByTagName('tr')
        var data = {}
        for (var i = 1; i < tableRow.length; i++) {
            data[i] = {}
            data[i]['id'] = tableRow[i].children[0].textContent //IDLine
            data[i]['idS'] = parseInt(tableRow[i].children[1].children[1].getElementsByTagName("select")[0].value) //IDTalents
            data[i]['specs'] = tableRow[i].children[2].children[1].value //specs
        }

        var url = '{{ path("saveTalentsRanks") }}'
        $.ajax({
            url: url,
            data: {
                id: id,
                data: JSON.stringify(data)
            },
            type: "POST",
            dataType: "json",
            success: function (data, status) {
                M.toast({ html: 'Talents par défaut enregistrés avec succès !' })
                M.Modal.getInstance(document.getElementById('modalTalents')).close()
            },
            error: function (error, status, errorThrow) {
                console.log(status + "\n" + errorThrow)
            }
        })
    }

    /*************************************************************
    * GESTION DES POSSESSIONS (TrappingRank)
    *************************************************************/   
    function openTrapping(id){
        var url = '{{ path("readRanksTrapping") }}'
        $.ajax({
            url: url,
            data: {
                id: id
            },
            type: "POST",
            dataType: "html",
            success: function (data, status) {
                $("#tableTrapping").html(data);
                M.FormSelect.init(document.querySelectorAll('select'),{dropdownOptions:{container:document.body}});
            },
            error: function (error, status, errorThrow) {
                console.log(status + "\n" + errorThrow)
            },
            complete: function () {
                var elem = document.getElementById('modalTrapping')
                document.getElementsByClassName('modButtonTrapping')[0].setAttribute('id', id)
                M.Modal.getInstance(elem).open()
            }
        })
    }

    function createTrappingLine(){
        var row = document.getElementById('tableTrapping').insertRow(-1)
        var cellID = row.insertCell(-1)
        cellID.setAttribute('class','unvisible')
        cellID.innerHTML = '-1'

        var cellTrapping = row.insertCell(-1)
        var labelS = document.createElement('label')
        labelS.innerHTML = 'Item'
        var TrappingList = document.createElement('select')
        TrappingList.setAttribute('name',"trapping")
        var opt = document.createElement('option')
        opt.innerHTML = 'Sélectionner un item ...'
        opt.setAttribute('value','')
        TrappingList.append(opt)
        var url = '{{ path("getAllTrapping") }}'
        $.ajax({
            url: url,
            type: "POST",
            dataType: "JSON",
            success: function (data, status) {
                console.log(data)
                if(data.length != 0){
                    data.forEach(tab => {
                        if(tab.data.length > 0){
                            var optGroup = document.createElement('optgroup')
                            optGroup.setAttribute('label', tab.name)
                            for(var i = 0; i < tab.data.length; i++){
                                opt = document.createElement('option')
                                opt.innerHTML = tab.data[i].name
                                opt.setAttribute('value',tab.data[i].id)
                                optGroup.append(opt)
                            }
                            TrappingList.append(optGroup)
                        }
                    })
                }

                cellTrapping.append(labelS)
                cellTrapping.append(TrappingList)
                
                var cellQte = row.insertCell(-1)
                var labelQte = document.createElement('label')
                labelQte.innerHTML = 'Quantité'
                var inputQte = document.createElement('input')
                cellQte.append(labelQte)
                cellQte.append(inputQte)

                var cellButton = row.insertCell(-1)
                cellButton.setAttribute('style','text-align:right')
                var buttonDel = document.createElement('a')
                buttonDel.setAttribute('class', 'waves-effect waves-light btn')
                buttonDel.setAttribute('onclick','delTrappingLine(this)')
                var icon = document.createElement('i')
                icon.innerHTML = 'delete'
                icon.setAttribute('class','material-icons')
                buttonDel.append(icon)
                cellButton.append(buttonDel)

                M.FormSelect.init(document.querySelectorAll('select'),{dropdownOptions:{container:document.body}});
            },
        })
    }

    function delTrappingLine(button){
        var row = button.parentElement.parentElement
        var id = parseInt(row.children[0].innerHTML)
        if(id > 0 && id != undefined && id != null){
            var url = '{{ path("deleteRankTrapping") }}'
            $.ajax({
                url : url,
                data : {
                    id : id
                },
                type : 'POST',
                dataType : 'JSON',
                success : function() {
                    row.remove()
                }
            })
        }else{
            row.remove()
        }
    }

    function saveTrapping(id){
        var tableRow = document.getElementById("tableTrapping").getElementsByTagName('tr')
        var data = {}
        for (var i = 1; i < tableRow.length; i++) {
            data[i] = {}
            data[i]['id'] = tableRow[i].children[0].textContent //IDLine

            var tmp = tableRow[i].children[1].children[1].getElementsByTagName("select")[0].value
            switch(tmp.split("/")[0]){ //type
                case 'T' : data[i]['type'] = 0 ; break
                case 'B' : data[i]['type'] = 1 ; break
                case 'A' : data[i]['type'] = 2 ; break
            }
            data[i]['idT'] = parseInt(tmp.split("/")[1]) //IDTrapping
            data[i]['qte'] = tableRow[i].children[2].children[1].value //qte
        }

        var url = '{{ path("saveRankTrapping") }}'
        $.ajax({
            url: url,
            data: {
                id: id,
                data: JSON.stringify(data)
            },
            type: "POST",
            dataType: "json",
            success: function (data, status) {
                M.toast({ html: 'Possessions par défaut enregistrés avec succès !' })
                M.Modal.getInstance(document.getElementById('modalTrapping')).close()
            },
            error: function (error, status, errorThrow) {
                console.log(status + "\n" + errorThrow)
            }
        })
    }
</script>
<div class="container">
    <div class="section">
        <h3 style="text-align:center">Edition des rangs de la classe {{nameC}}</h3>
    </div>
    <span class='unvisible' id='idCareers'>{{id}}</span>
    <a class="wave-effect wave-light btn" href="{{path('editCareers')}}">Retour</a>
    <table id='table'></table>

    <!-- Modal modalRanks -->
    <div id="modalRanks" class="modal">
        <div class="modal-content">
            <h4 id="formTitle">Rang</h4>
            <div id='formRanks' class="input-field"></div>
        </div>
        <div class="modal-footer">
            <a onclick="saveRanks(this.id)" class="wave-effect wave-green btn-flat modButton">Enregistrer</a>
            <a href="#!" class="modal-close wave-effect wave-red btn-flat">Annuler</a>
        </div>
    </div>

    <!-- Modal deleteRanks -->
    <div id="delRanks" class="modal">
        <div class="modal-content">
            <h4>Attention !</h4>
            <p>
                Cette suppression est irréversible.
                <br>
                Voulez-vous continuer ?
            </p>
        </div>
        <div class="modal-footer">
            <a onclick="delRanks(this.id)" class="modal-close wave-effect wave-green btn-flat delButton">Oui</a>
            <a href="#!" class="modal-close wave-effect wave-red btn-flat">Non</a>
        </div>
    </div>

    <!-- Modal modalSkills -->
    <div id="modalSkills" class="modal">
        <div class="modal-content">
            <h4 id="titleSkills">Compétences par défaut de la race</h4>
            <div class="input-field">
                <table id="tableSkills"></table>
            </div>
        </div>
        <div class="modal-footer">
            <a onclick="saveSkills(this.id)" class="wave-effect wave-green btn-flat modButtonSkills">Enregistrer</a>
            <a class="modal-close wave-effect wave-red btn-flat">Annuler</a>
        </div>
    </div>

    <!-- Modal modalTalents -->
    <div id="modalTalents" class="modal">
        <div class="modal-content">
            <h4 id="titleTalents">Compétences par défaut de la race</h4>
            <div class="input-field">
                <table id="tableTalents"></table>
            </div>
        </div>
        <div class="modal-footer">
            <a onclick="saveTalents(this.id)" class="wave-effect wave-green btn-flat modButtonTalents">Enregistrer</a>
            <a class="modal-close wave-effect wave-red btn-flat">Annuler</a>
        </div>
    </div>
    <!-- Modal modalTrapping -->
    <div id="modalTrapping" class="modal">
        <div class="modal-content">
            <h4 id="titleTrapping">Possession par défaut de la classe</h4>
            <div class="input-field">
                <table id="tableTrapping"></table>
            </div>
        </div>
        <div class="modal-footer">
            <a onclick="saveTrapping(this.id)" class="wave-effect wave-green btn-flat modButtonTrapping">Enregistrer</a>
            <a class="modal-close wave-effect wave-red btn-flat">Annuler</a>
        </div>
    </div>
</div>
{% endblock %}